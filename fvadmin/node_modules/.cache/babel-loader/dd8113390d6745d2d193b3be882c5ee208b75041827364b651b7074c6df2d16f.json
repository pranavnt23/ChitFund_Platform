{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\react\\\\fvadmin\\\\src\\\\ViewCustomer\\\\SearchByCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SearchByCustomer.css'; // Ensure you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchByCustomer = () => {\n  _s();\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [customerDetails, setCustomerDetails] = useState(null);\n  const [error, setError] = useState('');\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/customers/${mobileNumber}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const customer = await response.json();\n        setCustomerDetails(customer);\n        setError('');\n      } else {\n        setCustomerDetails(null);\n        setError('Customer does not exist');\n      }\n    } catch (err) {\n      console.error('Error fetching customer data:', err);\n      setError('An error occurred. Please try again.');\n    }\n  };\n  const handleClear = () => {\n    setMobileNumber('');\n    setCustomerDetails(null);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-by-customer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search by Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter customer mobile number...\",\n      value: mobileNumber,\n      onChange: e => setMobileNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), customerDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchByCustomer, \"fvlcfq/EDpVABmEuqIeJBkhTkZQ=\");\n_c = SearchByCustomer;\nexport default SearchByCustomer;\nvar _c;\n$RefreshReg$(_c, \"SearchByCustomer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchByCustomer","_s","mobileNumber","setMobileNumber","customerDetails","setCustomerDetails","error","setError","handleSearch","response","fetch","method","headers","ok","customer","json","err","console","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/prana/react/fvadmin/src/ViewCustomer/SearchByCustomer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchByCustomer.css'; // Ensure you have a CSS file for styling\r\n\r\nconst SearchByCustomer = () => {\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n  const [customerDetails, setCustomerDetails] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await fetch(`/api/customers/${mobileNumber}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const customer = await response.json();\r\n        setCustomerDetails(customer);\r\n        setError('');\r\n      } else {\r\n        setCustomerDetails(null);\r\n        setError('Customer does not exist');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching customer data:', err);\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setMobileNumber('');\r\n    setCustomerDetails(null);\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-by-customer-container\">\r\n      <h3>Search by Customer</h3>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter customer mobile number...\"\r\n        value={mobileNumber}\r\n        onChange={(e) => setMobileNumber(e.target.value)}\r\n      />\r\n      <div className=\"button-container\">\r\n        <button onClick={handleSearch}>Search</button>\r\n        <button onClick={handleClear}>Clear</button>\r\n      </div>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      {customerDetails && (\r\n        <div className=\"customer-details\">\r\n          {/* Render customer details */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchByCustomer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}