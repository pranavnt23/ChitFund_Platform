{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\react\\\\fvadmin\\\\src\\\\DeleteScheme\\\\DeleteScheme.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './DeleteScheme.css'; // Make sure you have appropriate CSS styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteScheme = () => {\n  _s();\n  const [schemes, setSchemes] = useState([]);\n\n  // Fetch all schemes from the backend\n  const fetchSchemes = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/admin-schemes');\n      const data = await response.json();\n      setSchemes(data);\n    } catch (error) {\n      console.error('Error fetching schemes:', error);\n    }\n  };\n\n  // Delete a scheme by ID\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/admin-schemes/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        alert('Scheme deleted successfully');\n        fetchSchemes(); // Refresh the list after deletion\n      } else {\n        alert('Failed to delete the scheme');\n      }\n    } catch (error) {\n      console.error('Error deleting scheme:', error);\n      alert('Server error while deleting scheme');\n    }\n  };\n\n  // Fetch schemes on component mount\n  useEffect(() => {\n    fetchSchemes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schemes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete Schemes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), schemes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No schemes available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : schemes.map((scheme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scheme-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: scheme.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: scheme.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Target Audience: \", scheme.targetAudience]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Investment Plan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: scheme.investmentPlan.map((plan, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: plan\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Benefits:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: scheme.benefits.map((benefit, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: benefit\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(scheme._id),\n        className: \"delete-btn\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteScheme, \"+dfK/hFDmV+Kjb0i6zbMal9b46s=\");\n_c = DeleteScheme;\nexport default DeleteScheme;\nvar _c;\n$RefreshReg$(_c, \"DeleteScheme\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DeleteScheme","_s","schemes","setSchemes","fetchSchemes","response","fetch","data","json","error","console","handleDelete","id","method","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","scheme","index","name","description","targetAudience","investmentPlan","plan","i","benefits","benefit","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/prana/react/fvadmin/src/DeleteScheme/DeleteScheme.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './DeleteScheme.css'; // Make sure you have appropriate CSS styling\r\n\r\nconst DeleteScheme = () => {\r\n  const [schemes, setSchemes] = useState([]);\r\n\r\n  // Fetch all schemes from the backend\r\n  const fetchSchemes = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/admin-schemes');\r\n      const data = await response.json();\r\n      setSchemes(data);\r\n    } catch (error) {\r\n      console.error('Error fetching schemes:', error);\r\n    }\r\n  };\r\n\r\n  // Delete a scheme by ID\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/admin-schemes/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        alert('Scheme deleted successfully');\r\n        fetchSchemes(); // Refresh the list after deletion\r\n      } else {\r\n        alert('Failed to delete the scheme');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting scheme:', error);\r\n      alert('Server error while deleting scheme');\r\n    }\r\n  };\r\n\r\n  // Fetch schemes on component mount\r\n  useEffect(() => {\r\n    fetchSchemes();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"schemes-container\">\r\n      <h2>Delete Schemes</h2>\r\n      {schemes.length === 0 ? (\r\n        <p>No schemes available</p>\r\n      ) : (\r\n        schemes.map((scheme, index) => (\r\n          <div key={index} className=\"scheme-card\">\r\n            <h3>{scheme.name}</h3>\r\n            <p>{scheme.description}</p>\r\n            <h4>Target Audience: {scheme.targetAudience}</h4>\r\n            <h4>Investment Plan:</h4>\r\n            <ul>\r\n              {scheme.investmentPlan.map((plan, i) => (\r\n                <li key={i}>{plan}</li>\r\n              ))}\r\n            </ul>\r\n            <h4>Benefits:</h4>\r\n            <ul>\r\n              {scheme.benefits.map((benefit, i) => (\r\n                <li key={i}>{benefit}</li>\r\n              ))}\r\n            </ul>\r\n            <button onClick={() => handleDelete(scheme._id)} className=\"delete-btn\">Delete</button>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteScheme;\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}